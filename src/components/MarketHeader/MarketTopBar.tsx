import type { FC } from 'react';
import { bem } from '@/css/bem.ts';
import { useUser } from '@/lib/api-hooks';
import { Link } from '../Link/Link';
import './MarketHeader.css';
import { TonConnectButton } from '@tonconnect/ui-react';
import { useModal } from '@/contexts/ModalContext';

// Icon components for info button
const getIconSvg = (symbol: string) => {
  switch (symbol) {
    case 'cards':
      return (
        <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M5.4552 13.8072C5.5144 14.0248 5.60374 14.2222 5.7232 14.3992H5.5984C4.7152 14.3992 3.9984 13.6832 3.9976 12.7992L3.9936 8.37123L5.4552 13.8072ZM3.2 13.1992C3.2 13.3208 3.21067 13.4398 3.232 13.556L3.1872 13.544C2.98407 13.4898 2.79362 13.3961 2.62674 13.2682C2.45985 13.1403 2.31981 12.9808 2.2146 12.7988C2.1094 12.6168 2.0411 12.4158 2.01361 12.2074C1.98612 11.9989 1.99999 11.7871 2.0544 11.584L3.1952 7.31203L3.2 13.1992ZM6.124 13.2136C6.1784 13.4167 6.27227 13.6071 6.40027 13.7738C6.52827 13.9406 6.68788 14.0805 6.86998 14.1856C7.05208 14.2906 7.2531 14.3588 7.46154 14.3861C7.66999 14.4134 7.88178 14.3994 8.0848 14.3448L12.4176 13.184C12.8274 13.074 13.1767 12.8057 13.3887 12.4381C13.6007 12.0706 13.658 11.6338 13.548 11.224L11.2792 2.78563C11.2247 2.58263 11.1308 2.39235 11.0027 2.22567C10.8747 2.05899 10.7151 1.91917 10.533 1.81419C10.3509 1.70922 10.1499 1.64115 9.94152 1.61387C9.73311 1.5866 9.52137 1.60065 9.3184 1.65523L4.9856 2.81523C4.57598 2.92527 4.22682 3.19346 4.01485 3.56084C3.80288 3.92822 3.74546 4.36473 3.8552 4.77443L6.124 13.2136ZM7.2 5.00003C7.2 5.15916 7.13679 5.31177 7.02427 5.42429C6.91175 5.53681 6.75913 5.60003 6.6 5.60003C6.44087 5.60003 6.28826 5.53681 6.17574 5.42429C6.06322 5.31177 6 5.15916 6 5.00003C6 4.8409 6.06322 4.68829 6.17574 4.57576C6.28826 4.46324 6.44087 4.40003 6.6 4.40003C6.75913 4.40003 6.91175 4.46324 7.02427 4.57576C7.13679 4.68829 7.2 4.8409 7.2 5.00003Z" fill="white"/>
        </svg>
      );
    case 'gift':
      return (
        <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M7.33337 9.33328V14.6666H4.66671C4.13627 14.6666 3.62757 14.4559 3.25249 14.0808C2.87742 13.7058 2.66671 13.197 2.66671 12.6666V9.99994C2.66671 9.82313 2.73695 9.65356 2.86197 9.52854C2.98699 9.40351 3.15656 9.33328 3.33337 9.33328H7.33337ZM12.6667 9.33328C12.8435 9.33328 13.0131 9.40351 13.1381 9.52854C13.2631 9.65356 13.3334 9.82313 13.3334 9.99994V12.6666C13.3334 13.197 13.1227 13.7058 12.7476 14.0808C12.3725 14.4559 11.8638 14.6666 11.3334 14.6666H8.66671V9.33328H12.6667ZM11 1.33328C11.3937 1.3332 11.781 1.43272 12.1259 1.62259C12.4707 1.81246 12.762 2.08649 12.9724 2.41919C13.1829 2.75188 13.3057 3.13242 13.3296 3.52537C13.3534 3.91833 13.2774 4.31092 13.1087 4.66661H13.3334C13.687 4.66661 14.0261 4.80709 14.2762 5.05713C14.5262 5.30718 14.6667 5.64632 14.6667 5.99994V6.66661C14.6667 7.02023 14.5262 7.35937 14.2762 7.60942C14.0261 7.85947 13.687 7.99994 13.3334 7.99994H8.66671V4.66661H7.33337V7.99994H2.66671C2.31309 7.99994 1.97395 7.85947 1.7239 7.60942C1.47385 7.35937 1.33337 7.02023 1.33337 6.66661V5.99994C1.33337 5.64632 1.47385 5.30718 1.7239 5.05713C1.97395 4.80709 2.31309 4.66661 2.66671 4.66661H2.89137C2.7433 4.35405 2.66656 4.01248 2.66671 3.66661C2.66671 2.37794 3.71137 1.33328 4.98871 1.33328C6.15871 1.31328 7.19671 2.06128 7.90937 3.28928L8.00004 3.45128C8.68871 2.17528 9.70671 1.37528 10.8607 1.33461L11 1.33328ZM5.00004 2.66661C4.73482 2.66661 4.48047 2.77197 4.29293 2.9595C4.1054 3.14704 4.00004 3.40139 4.00004 3.66661C4.00004 3.93183 4.1054 4.18618 4.29293 4.37372C4.48047 4.56125 4.73482 4.66661 5.00004 4.66661H7.09537C6.60137 3.39661 5.79604 2.65328 5.00004 2.66661ZM10.9887 2.66661C10.202 2.65328 9.39871 3.39728 8.90471 4.66661H11C11.2653 4.66511 11.519 4.55831 11.7055 4.36971C11.892 4.18111 11.9959 3.92616 11.9944 3.66094C11.9929 3.39573 11.8861 3.14197 11.6975 2.9555C11.5089 2.76902 11.2539 2.66511 10.9887 2.66661Z" fill="white"/>
        </svg>
      );
    case 'offer':
      return (
        <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M14.2734 7.72004L8.27337 1.72004C8.03337 1.48004 7.70004 1.33337 7.33337 1.33337H2.66671C1.93337 1.33337 1.33337 1.93337 1.33337 2.66671V7.33337C1.33337 7.70004 1.48004 8.03337 1.72671 8.28004L7.72671 14.28C7.96671 14.52 8.30004 14.6667 8.66671 14.6667C9.03337 14.6667 9.36671 14.52 9.60671 14.2734L14.2734 9.60671C14.52 9.36671 14.6667 9.03337 14.6667 8.66671C14.6667 8.30004 14.5134 7.96004 14.2734 7.72004ZM3.66671 4.66671C3.11337 4.66671 2.66671 4.22004 2.66671 3.66671C2.66671 3.11337 3.11337 2.66671 3.66671 2.66671C4.22004 2.66671 4.66671 3.11337 4.66671 3.66671C4.66671 4.22004 4.22004 4.66671 3.66671 4.66671Z" fill="white"/>
        </svg>
      );
    case 'bell':
      return (
        <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M7.47273 2.54405C7.44019 2.37025 7.33995 2.21648 7.19405 2.11659C7.04814 2.01669 6.86853 1.97885 6.69473 2.01138C6.52092 2.04392 6.36716 2.14416 6.26726 2.29007C6.16737 2.43597 6.12953 2.61558 6.16206 2.78938L6.37873 3.94938C5.694 4.30166 5.14194 4.86645 4.80538 5.55904C4.46882 6.25163 4.3659 7.03468 4.51206 7.79072L4.69606 8.77272L4.73273 8.97005C4.90473 9.88605 4.58073 10.4781 4.31273 10.9687C4.12273 11.3154 3.96139 11.6114 4.02139 11.9347C4.09473 12.3254 4.16806 12.7167 4.52139 12.6507L12.9881 11.0661C13.3401 10.9994 13.2667 10.6094 13.1934 10.2194C13.1247 9.84338 12.7694 9.47072 12.3967 9.07872C11.9927 8.65472 11.5681 8.20805 11.4607 7.71138C11.3054 6.98805 11.2774 6.78672 11.2587 6.65338C11.2527 6.61138 11.2481 6.57539 11.2401 6.53205C11.0898 5.69986 10.6481 4.94834 9.99423 4.41209C9.34034 3.87583 8.51691 3.58986 7.67139 3.60538L7.47273 2.54405Z" fill="white"/>
          <path fillRule="evenodd" clipRule="evenodd" d="M4.35934 2.85206C4.4903 2.97073 4.56878 3.13655 4.57753 3.31306C4.58628 3.48958 4.52459 3.66235 4.406 3.79339C3.66267 4.61339 3.26934 5.53006 3.186 6.63339C3.17274 6.80976 3.08996 6.97364 2.95588 7.08897C2.82179 7.20431 2.64737 7.26165 2.471 7.24839C2.29464 7.23513 2.13076 7.15235 2.01542 7.01826C1.90009 6.88417 1.84274 6.70976 1.856 6.53339C1.96267 5.13406 2.47534 3.93806 3.41734 2.89806C3.47615 2.83316 3.54718 2.78049 3.62636 2.74305C3.70554 2.70561 3.79133 2.68414 3.87881 2.67987C3.96629 2.6756 4.05375 2.68861 4.1362 2.71815C4.21866 2.7477 4.29448 2.7932 4.35934 2.85206Z" fill="white"/>
          <path d="M5.96667 13.1334C6.43334 13.6667 7.10001 14 7.83334 14C8.90001 14 9.76668 13.2667 10.0333 12.3334L5.96667 13.1334Z" fill="white"/>
        </svg>
      );
    case 'people':
      return (
        <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path fillRule="evenodd" clipRule="evenodd" d="M5.33333 4.66667C5.33333 3.95942 5.61428 3.28115 6.11438 2.78105C6.61448 2.28095 7.29276 2 8 2C8.70724 2 9.38552 2.28095 9.88562 2.78105C10.3857 3.28115 10.6667 3.95942 10.6667 4.66667C10.6667 5.37391 10.3857 6.05219 9.88562 6.55229C9.38552 7.05238 8.70724 7.33333 8 7.33333C7.29276 7.33333 6.61448 7.05238 6.11438 6.55229C5.61428 6.05219 5.33333 5.37391 5.33333 4.66667ZM5.33333 8.66667C4.44928 8.66667 3.60143 9.01786 2.97631 9.64298C2.35119 10.2681 2 11.1159 2 12C2 12.5304 2.21071 13.0391 2.58579 13.4142C2.96086 13.7893 3.46957 14 4 14H12C12.5304 14 13.0391 13.7893 13.4142 13.4142C13.7893 13.0391 14 12.5304 14 12C14 11.1159 13.6488 10.2681 13.0237 9.64298C12.3986 9.01786 11.5507 8.66667 10.6667 8.66667H5.33333Z" fill="white"/>
        </svg>
      );
    default:
      return (
        <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M14 2H2C1.46957 2 0.960859 2.21071 0.585786 2.58579C0.210714 2.96086 0 3.46957 0 4V5.33333H16V4C16 3.46957 15.7893 2.96086 15.4142 2.58579C15.0391 2.21071 14.5304 2 14 2Z" fill="white"/>
          <path d="M0 12C0 12.5304 0.210714 13.0391 0.585786 13.4142C0.960859 13.7893 1.46957 14 2 14H14C14.5304 14 15.0391 13.7893 15.4142 13.4142C15.7893 13.0391 16 12.5304 16 12V6.66667H0V12ZM2.66667 9.33333C2.66667 9.15652 2.7369 8.98695 2.86193 8.86193C2.98695 8.7369 3.15652 8.66667 3.33333 8.66667H6C6.17681 8.66667 6.34638 8.7369 6.4714 8.86193C6.59643 8.98695 6.66667 9.15652 6.66667 9.33333V10.6667C6.66667 10.8435 6.59643 11.0131 6.4714 11.1381C6.34638 11.2631 6.17681 11.3333 6 11.3333H3.33333C3.15652 11.3333 2.98695 11.2631 2.86193 11.1381C2.7369 11.0131 2.66667 10.8435 2.66667 10.6667V9.33333Z" fill="white"/>
        </svg>
      );
  }
};

// Get gradient colors based on color name
const getGradientColors = (color: string) => {
  switch (color) {
    case 'purple':
      return 'linear-gradient(135deg, #B700FF 0%, #FA00E1 100%)';
    case 'green':
      return 'linear-gradient(135deg, #56AD00 0%, #00A318 100%)';
    case 'blue':
      return 'linear-gradient(135deg, #0059FF 0%, #009AFA 100%)';
    case 'red':
      return 'linear-gradient(135deg, #FF005E 0%, #FA0021 100%)';
    case 'orange':
      return 'linear-gradient(135deg, #FFAE00 0%, #FA8800 100%)';
    default:
      return 'linear-gradient(135deg, #1589D0 0%, #0077bb 100%)';
  }
};

const [b, e] = bem('market-header');

export interface MarketTopBarProps {
  balance?: number;
  showAddChannel?: boolean;
  onAddChannel?: () => void;
  showConnectButton?: boolean;
  /** If true, shows a settings button instead of the telegram channel button */
  showSettings?: boolean;
  /** Optional custom handler for settings button click. If not provided, opens the built-in settings modal */
  onSettingsClick?: () => void;
}

export const MarketTopBar: FC<MarketTopBarProps> = ({ 
  balance: propBalance, 
  showAddChannel = false,
  onAddChannel,
  showConnectButton = false,
  showSettings = false,
  onSettingsClick
}) => {
  const { data: user } = useUser();
  const balance = propBalance ?? user?.balance ?? 0;
  const { openModal } = useModal();

  const handleSettingsClick = () => {
    if (onSettingsClick) {
      onSettingsClick();
    } else {
      openModal('settings');
    }
  };

  const handleInfoButtonClick = () => {
    if (!user?.info_button) return;
    
    const { link } = user.info_button;
    
    if (link === 'guide' || !link) {
      openModal('guide');
    } else if (link && link.startsWith('http')) {
      window.open(link, '_blank');
    } else if (link) {
      // Internal link navigation
      window.location.href = link;
    }
  };

  return (
    <div className={b()}>
      <div className={e('second-row')}>
        {showConnectButton ? <div /> : (
          showSettings ? (
            <button 
              className={e('telegram-badge')} 
              onClick={handleSettingsClick}
            >
              <div className={e('telegram-icon')}>
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M12 15.5A3.5 3.5 0 0 1 8.5 12A3.5 3.5 0 0 1 12 8.5a3.5 3.5 0 0 1 3.5 3.5a3.5 3.5 0 0 1-3.5 3.5m7.43-2.53c.04-.32.07-.64.07-.97c0-.33-.03-.66-.07-1l2.11-1.63c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.31-.61-.22l-2.49 1c-.52-.39-1.06-.73-1.69-.98l-.37-2.65A.506.506 0 0 0 14 2h-4c-.25 0-.46.18-.5.42l-.37 2.65c-.63.25-1.17.59-1.69.98l-2.49-1c-.22-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64L4.57 11c-.04.34-.07.67-.07 1c0 .33.03.65.07.97l-2.11 1.66c-.19.15-.25.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1.01c.52.4 1.06.74 1.69.99l.37 2.65c.04.24.25.42.5.42h4c.25 0 .46-.18.5-.42l.37-2.65c.63-.26 1.17-.59 1.69-.99l2.49 1.01c.22.08.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.66Z" fill="currentColor"/>
                </svg>
              </div>
              <span className={e('telegram-text')}>Settings</span>
              <div className={e('arrow')}>
                <svg width="12" height="16" viewBox="0 0 12 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M2.99998 11.6667L6.33331 8.33333L2.99998 5" stroke="white" strokeWidth="1.33333" strokeLinecap="round" strokeLinejoin="round"/>
                </svg>
              </div>
            </button>
          ) : showAddChannel ? (
            <button 
              className={e('telegram-badge')} 
              onClick={onAddChannel}
            >
              <div className={e('telegram-icon')}>
              <svg width="14" height="14" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M4.22222 22L2 8.66667H22L19.7778 22H4.22222ZM9.77778 15.3333H14.2222C14.537 15.3333 14.8011 15.2267 15.0144 15.0133C15.2278 14.8 15.3341 14.5363 15.3333 14.2222C15.3326 13.9081 15.2259 13.6444 15.0133 13.4311C14.8007 13.2178 14.537 13.1111 14.2222 13.1111H9.77778C9.46296 13.1111 9.19926 13.2178 8.98667 13.4311C8.77407 13.6444 8.66741 13.9081 8.66667 14.2222C8.66593 14.5363 8.77259 14.8004 8.98667 15.0144C9.20074 15.2285 9.46444 15.3348 9.77778 15.3333ZM5.33333 7.55556C5.01852 7.55556 4.75482 7.44889 4.54222 7.23556C4.32963 7.02222 4.22296 6.75852 4.22222 6.44444C4.22148 6.13037 4.32815 5.86667 4.54222 5.65333C4.7563 5.44 5.02 5.33333 5.33333 5.33333H18.6667C18.9815 5.33333 19.2456 5.44 19.4589 5.65333C19.6722 5.86667 19.7785 6.13037 19.7778 6.44444C19.777 6.75852 19.6704 7.02259 19.4578 7.23667C19.2452 7.45074 18.9815 7.55704 18.6667 7.55556H5.33333ZM7.55556 4.22222C7.24074 4.22222 6.97704 4.11556 6.76444 3.90222C6.55185 3.68889 6.44519 3.42519 6.44444 3.11111C6.4437 2.79704 6.55037 2.53333 6.76444 2.32C6.97852 2.10667 7.24222 2 7.55556 2H16.4444C16.7593 2 17.0233 2.10667 17.2367 2.32C17.45 2.53333 17.5563 2.79704 17.5556 3.11111C17.5548 3.42519 17.4481 3.68926 17.2356 3.90333C17.023 4.11741 16.7593 4.2237 16.4444 4.22222H7.55556Z" fill="currentColor"/>
              </svg>
              </div>
              <span className={e('telegram-text')}>Add Channel</span>
              <div className={e('arrow')}>
                <svg width="12" height="16" viewBox="0 0 12 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M2.99998 11.6667L6.33331 8.33333L2.99998 5" stroke="white" strokeWidth="1.33333" strokeLinecap="round" strokeLinejoin="round"/>
                </svg>
              </div>
            </button>
          ) : !showConnectButton && user?.info_button && (
            <button 
              className={e('telegram-badge')}
              onClick={handleInfoButtonClick}
              style={{ background: getGradientColors(user.info_button.color) }}
            >
              <div className={e('telegram-icon')}>
                {getIconSvg(user.info_button.symbol)}
              </div>
              <span className={e('telegram-text')}>{user.info_button.text}</span>
              <div className={e('arrow')}>
                <svg width="12" height="16" viewBox="0 0 12 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M2.99998 11.6667L6.33331 8.33333L2.99998 5" stroke="white" strokeWidth="1.33333" strokeLinecap="round" strokeLinejoin="round"/>
                </svg>
              </div>
            </button>
          )
        )}
        <div className={e('right-section')}>

          {showConnectButton ? (
            <TonConnectButton />
          ) : (
          <Link className={e('btn-group')} href="/wallet">
            <div className={e('balance-icon')}>
              <svg className={e('diamond-icon')} width="13" height="12" viewBox="0 0 13 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M11.915 2.31099L6.62167 10.7402C6.5571 10.8426 6.46755 10.9269 6.36145 10.9852C6.25534 11.0435 6.13616 11.0738 6.0151 11.0734C5.89403 11.073 5.77506 11.0418 5.66936 10.9828C5.56366 10.9238 5.4747 10.8388 5.41083 10.736L0.221667 2.30765C0.0765355 2.07125 -0.000196165 1.79922 3.76621e-07 1.52182C0.0065815 1.11219 0.175416 0.721902 0.469449 0.436618C0.763481 0.151334 1.15869 -0.00563721 1.56833 0.000154777H10.5825C11.4433 0.000154777 12.1433 0.679321 12.1433 1.51849C12.1428 1.7988 12.0637 2.07335 11.915 2.31099ZM1.49667 2.02932L5.3575 7.98265V1.42932H1.9C1.5 1.42932 1.32167 1.69349 1.49667 2.02932ZM6.78583 7.98265L10.6467 2.02932C10.825 1.69349 10.6433 1.42932 10.2433 1.42932H6.78583V7.98265Z" fill="white"/>
              </svg>
            </div>
            <span className={e('balance-amount')}>{balance}</span>
            <Link className={e('add-button')} to="/wallet"><span style={{fontSize: '18px', marginBottom: '3px'}}>+</span></Link>
          </Link>
          )}
        </div>
      </div>
    </div>
  );
};

